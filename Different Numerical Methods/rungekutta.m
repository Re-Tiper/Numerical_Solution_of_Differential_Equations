function [x, y]=rungekutta(f,x0,y0,xf,h,c,A,b)
s=length(b); % ο αριθμός των σταδίων της μεθόδου
dim=length(y0); % για την περίπτωση που λύνουμε σύστημα δ.ε.
i=1; x(1)=x0; y(1)=y0(1);

while xf-x0>1e-6 
    if xf-x0<h 
        h= xf-x0; end

k=zeros(s,dim);
for j=1:s
    k(j,:)=h*f(x0+c(j)*h,y0+(A(j,:)*k)');
end 
x1= x0 + h;
y1= y0 + (b'*k)';
i=i+1;
x(i)=x1; 
y(i)=y1(1); 
x0=x1; y0=y1;
end 
end

%2)
%f= @(t,y) -y - 5.*exp(-t).*sin(5.*t);
%f1= @(t) cos(5.*t).*exp(-t);
%[x,y1]= rungekutta(f,0,1,1,0.2,[0 1]',[0 0; 1 0],[0.5 0.5]');
%[x,y2]= improvedeuler(f,0,1,1,0.2);
%plot(x,y1,'*',x,y2,'+',x,f1(x),'-') 
% Παρατηρούμε ότι στο γράφημα είναι τα ίδια σημεια αφού Improved Euler=RK2.

%3,4)
%f= @(t,y) -y - 5.*exp(-t).*sin(5.*t);
%f1= @(t) cos(5.*t).*exp(-t);
%[x,y1]= rungekutta(f,0,1,3,0.2,[0 1]',[0 0; 1 0],[0.5 0.5]');
%[x,y2]= rungekutta(f,0,1,3,0.2,[0 1/2 1]',[0 0 0; 1/2 0 0; -1 2 0],[1/6 2/3 1/6]');
%[x,y3]= rungekutta(f,0,1,3,0.2,[0 1/2 1/2 1]',[0 0 0 0; 1/2 0 0 0; 0 1/2 0 0; 0 0 1 0],[1/6 1/3 1/3 1/6]');
%plot(x,y1,'*',x,y2,'+',x,y3,'x',x,f1(x),'-') 
% Παρατηρούμε ότι στο γράφημα η RK3 και RK4 είναι αρκετά κοντά και παίρνουν τιμές πιο κοντά στις πραγματικές από την RK2.

%5)
%f1= @(x) cos(x);
%f=@(t,y) [y(2) -y(1)]';
%[x, y1] = rungekutta(f, 0, [1 0]', 60*pi(), 0.5, [0 1]',[0 0; 1 0],[0.5 0.5]');
%[x, y2] = rungekutta(f, 0, [1 0]', 60*pi(), 0.5, [0 1/2 1]',[0 0 0; 1/2 0 0; -1 2 0],[1/6 2/3 1/6]');
%[x, y3] = rungekutta(f, 0, [1 0]', 60*pi(), 0.5, [0 1/2 1/2 1]',[0 0 0 0; 1/2 0 0 0; 0 1/2 0 0; 0 0 1 0],[1/6 1/3 1/3 1/6]');
%plot(x,y1,'*',x,y2,'+',x,y3,'x',x,f1(x),'-') 

% Εφαρμογή
%f= @(x,y) 5.*exp(5*x).*(y-x).^2 + 1;
%f1= @(x) x - exp(-5*x);
%c2= [0 1/2 1/2 1]';
%A2= [0 0 0 0;1/2 0 0 0;0 1/2 0 0;0 0 1 0];
%b2= [1/6 1/3 1/3 1/6]';
%[x1, y1]=rungekutta(f, 0, -1, 2, 0.2, c2, A2, b2);
%plot(x1,y1,'*',x1,f1(x1),'-')
%[x2, y2]=rungekutta(f, 0, -1, 2, 0.25, c2, A2, b2);
%plot(x2,y2,'*',x2,f1(x2),'-')
